# docker-compose.yml
version: "3"



services:

  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - node.name=elasticsearch
      - xpack.security.transport.ssl.enabled=true
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic

  # web:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   image: ted_web
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     # - postgres
  #     - elasticsearch
  #     # env_file: .env
  #     - "8000:8000"
  #   command: /start
  db:
    image: "postgres:13-alpine"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    container_name: postgres_db

  web:
    restart: unless-stopped
    build:
      context: ./backend
      # dockerfile: ./backend/Dockerfile
    ports:
      - 8000:8000
    depends_on:
      # - postgres
      - elasticsearch1
    entrypoint: /app/entrypoint.sh
    volumes:
      - static_volume:/app/django_static
      - media_volume:/app/product_images
    networks:
      - elastic

  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/django_static
      - media_volume:/app/product_images
    depends_on:
      - web
      # - frontend
    networks:
      - elastic

volumes:
  esdata1:
    driver: local
  static_volume: {}
  media_volume :
  postgres_data :
  

      
networks:
  elastic:
    driver: bridge


